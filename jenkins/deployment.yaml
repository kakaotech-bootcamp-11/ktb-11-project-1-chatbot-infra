apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      securityContext:
            fsGroup: 1000
            runAsUser: 1000
      serviceAccountName: jenkins-admin
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "500Mi"
              cpu: "500m"
          ports:
            - name: httpport
              containerPort: 8080
            - name: jnlpport
              containerPort: 50000
          livenessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
            - name: kubectl-bin # pipeline으로 CI/CD 하기 위한 설정
              mountPath: /usr/bin/kubectl
            - name: podman-bin # pipeline으로 CI/CD 하기 위한 설정
              mountPath: /usr/bin/podman
            - name: containerd-bin # pipeline으로 CI/CD 하기 위한 설정
              mountPath: /usr/bin/containerd
            - name: containerd-sock # pipeline으로 CI/CD 하기 위한 설정
              mountPath: /run/containerd/containerd.sock
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
              claimName: jenkins-pv-claim
        - name: kubectl-bin
          hostPath:
            path: /usr/bin/kubectl
            type: File
        - name: podman-bin
          hostPath:
            path: /usr/bin/podman
            type: File
        - name: containerd-bin
          hostPath:
            path: /usr/bin/containerd
            type: File
        - name: containerd-sock
          hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
